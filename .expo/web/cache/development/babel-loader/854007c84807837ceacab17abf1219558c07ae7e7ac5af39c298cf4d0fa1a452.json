{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar exec = require('child_process').exec;\nfunction executeJavaCode(_x) {\n  return _executeJavaCode.apply(this, arguments);\n}\nfunction _executeJavaCode() {\n  _executeJavaCode = _asyncToGenerator(function* (javaCode) {\n    var output = yield exec(`java -cp . HelloWorld.java`, {\n      input: javaCode\n    });\n    return output;\n  });\n  return _executeJavaCode.apply(this, arguments);\n}\nmodule.exports = executeJavaCode;","map":{"version":3,"names":["exec","require","executeJavaCode","_x","_executeJavaCode","apply","arguments","_asyncToGenerator","javaCode","output","input","module","exports"],"sources":["C:/Users/basil/ProjetMobileII/execute-java-code.js"],"sourcesContent":["const exec = require('child_process').exec;\r\n\r\n// Execute the Java code in the textfield.\r\n\r\nasync function executeJavaCode(javaCode) {\r\n  const output = await exec(`java -cp . HelloWorld.java`, {\r\n    input: javaCode,\r\n  });\r\n\r\n  return output;\r\n}\r\n\r\nmodule.exports = executeJavaCode;\r\n\r\n/*const express = require('express');\r\nconst { exec } = require('child_process');\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.use(express.json());\r\n\r\napp.post('/executeJava', (req, res) => {\r\n  const javaCode = req.body.javaCode; // Assuming you send Java code in the request body\r\n\r\n  // Execute Java code as a separate process\r\n  exec(`javac - && java -cp . ${javaCode}`, (error, stdout, stderr) => {\r\n    if (error) {\r\n      console.error(`Error: ${error.message}`);\r\n      res.status(500).json({ error: error.message });\r\n      return;\r\n    }\r\n    if (stderr) {\r\n      console.error(`Stderr: ${stderr}`);\r\n      res.status(400).json({ error: stderr });\r\n      return;\r\n    }\r\n    console.log(`Output: ${stdout}`);\r\n    res.json({ output: stdout });\r\n  });\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is running on port ${port}`);\r\n});*/\r\n"],"mappings":";AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC,CAACD,IAAI;AAAC,SAI5BE,eAAeA,CAAAC,EAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,iBAAA;EAAAA,gBAAA,GAAAG,iBAAA,CAA9B,WAA+BC,QAAQ,EAAE;IACvC,IAAMC,MAAM,SAAST,IAAI,CAAE,4BAA2B,EAAE;MACtDU,KAAK,EAAEF;IACT,CAAC,CAAC;IAEF,OAAOC,MAAM;EACf,CAAC;EAAA,OAAAL,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEDK,MAAM,CAACC,OAAO,GAAGV,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}