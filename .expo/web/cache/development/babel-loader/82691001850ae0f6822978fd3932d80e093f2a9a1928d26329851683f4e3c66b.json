{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Level\",\n        component: LevelScreen\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var levels = Array.from({\n    length: 1\n  }, function (_, index) {\n    return index + 1;\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Welcome to My Game\"\n    }), _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: _jsx(View, {\n        style: styles.row,\n        children: levels.map(function (level) {\n          return _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(CustomButton, {\n              title: `Level ${level}`,\n              onPress: function onPress() {\n                return navigation.navigate('Level', {\n                  level: level\n                });\n              }\n            })\n          }, level);\n        })\n      })\n    })]\n  });\n}\nfunction LevelScreen(_ref2) {\n  var route = _ref2.route,\n    navigation = _ref2.navigation;\n  var level = route.params.level;\n  var goBackToHome = function goBackToHome() {\n    navigation.goBack();\n  };\n  var levelCode = require(`./level_data/level${level}.js`).default;\n  var _useState = useState(levelCode),\n    _useState2 = _slicedToArray(_useState, 2),\n    code = _useState2[0],\n    setCode = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.header,\n      children: [\"Level \", level]\n    }), _jsx(TextInput, {\n      multiline: true,\n      style: styles.codeEditor,\n      value: code,\n      onChangeText: function onChangeText(newCode) {\n        return setCode(newCode);\n      }\n    }), _jsx(CustomButton, {\n      title: \"Go Back\",\n      onPress: goBackToHome\n    })]\n  });\n}\nfunction CustomButton(_ref3) {\n  var title = _ref3.title,\n    onPress = _ref3.onPress;\n  return _jsx(Button, {\n    title: title,\n    onPress: onPress\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","ScrollView","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","options","headerShown","LevelScreen","_ref","navigation","levels","Array","from","length","_","index","style","styles","container","header","scrollView","row","map","level","buttonContainer","CustomButton","title","onPress","navigate","_ref2","route","params","goBackToHome","goBack","levelCode","require","default","_useState","_useState2","_slicedToArray","code","setCode","multiline","codeEditor","value","onChangeText","newCode","_ref3"],"sources":["C:/Users/basil/ProjetMobileII/App.js"],"sourcesContent":["/*function LevelScreen({ route, navigation }) {\n  const { level } = route.params;\n  const goBackToHome = () => {\n    navigation.goBack();\n  };\n\n  const [code, setCode] = useState(`function myFunction() {\\n  console.log('Hello, World!');\\n}`);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Level {level}</Text>\n      <TextInput\n        multiline\n        style={styles.codeEditor}\n        value={code}\n        onChangeText={(newCode) => setCode(newCode)}\n      />\n      <CustomButton title=\"Go Back\" onPress={goBackToHome} />\n    </View>\n  );\n}*/\n\n\nimport React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, ScrollView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n//import { styles } from './styles'; // Import the styles\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Level\" component={LevelScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  const levels = Array.from({ length: 1 }, (_, index) => index + 1);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Welcome to My Game</Text>\n      <ScrollView style={styles.scrollView}>\n        <View style={styles.row}>\n          {levels.map((level) => (\n            <View key={level} style={styles.buttonContainer}>\n              <CustomButton\n                title={`Level ${level}`}\n                onPress={() => navigation.navigate('Level', { level })}\n              />\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction LevelScreen({ route, navigation }) {\n  const { level } = route.params;\n  const goBackToHome = () => {\n    navigation.goBack();\n  };\n\n  // Dynamically import the code for the selected level\n  const levelCode = require(`./level_data/level${level}.js`).default;\n\n  const [code, setCode] = useState(levelCode);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Level {level}</Text>\n      <TextInput\n        multiline\n        style={styles.codeEditor}\n        value={code}\n        onChangeText={(newCode) => setCode(newCode)}\n      />\n      <CustomButton title=\"Go Back\" onPress={goBackToHome} />\n    </View>\n  );\n}\n\n/*const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  scrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  buttonContainer: {\n    marginHorizontal: 10,\n    marginVertical: 10,\n  },\n  codeEditor: {\n    width: '100%',\n    height: 200,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    fontSize: 16,\n  },\n});*/\n\nfunction CustomButton({ title, onPress }) {\n  return (\n    <Button title={title} onPress={onPress} />\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}