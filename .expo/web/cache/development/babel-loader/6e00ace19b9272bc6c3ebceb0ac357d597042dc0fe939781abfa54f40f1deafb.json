{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { styles } from \"../styles/Styles\";\nimport CustomButton from \"../components/CustomButton\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen() {\n  var navigation = useNavigation();\n  var user;\n  var name;\n  console.log(auth.currentUser);\n  if (auth.currentUser != null) {\n    user = auth.currentUser;\n    name = user.name || user.email;\n  } else {\n    name = \"\";\n  }\n  var levels = Array.from({\n    length: 4\n  }, function (_, index) {\n    return index + 1;\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Welcome to BaseCode\"\n    }), _jsxs(Text, {\n      children: [\"Hello, \", name, \"!\"]\n    }), _jsxs(ScrollView, {\n      style: styles.scrollView,\n      children: [_jsx(View, {\n        style: styles.row,\n        children: levels.map(function (level) {\n          return _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(CustomButton, {\n              title: `Level ${level}`,\n              color: \"#4287f5\",\n              height: 50,\n              width: 100,\n              onPress: function onPress() {\n                return navigation.navigate('Level', {\n                  level: level\n                });\n              }\n            })\n          }, level);\n        })\n      }), _jsx(CustomButton, {\n        title: `Login`,\n        color: \"#4287f5\",\n        height: 50,\n        width: 100,\n        onPress: function onPress() {\n          return navigation.navigate('Login');\n        }\n      })]\n    })]\n  });\n}\nexport default HomeScreen;","map":{"version":3,"names":["React","View","Text","ScrollView","useNavigation","styles","CustomButton","auth","jsx","_jsx","jsxs","_jsxs","HomeScreen","navigation","user","name","console","log","currentUser","email","levels","Array","from","length","_","index","style","container","children","header","scrollView","row","map","level","buttonContainer","title","color","height","width","onPress","navigate"],"sources":["C:/Users/basil/ProjetMobileII/pages/HomeScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, ScrollView } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {styles} from '../styles/Styles'; // Import the styles\r\nimport CustomButton from '../components/CustomButton';\r\nimport { auth } from '../firebase';\r\n\r\nfunction HomeScreen() {\r\n  const navigation = useNavigation();\r\n\r\n  var user;\r\n  var name;\r\n  console.log(auth.currentUser);\r\n  if(auth.currentUser != null){\r\n    user = auth.currentUser;\r\n    name = user.name || user.email;\r\n  } else {\r\n    name = \"\";\r\n  }\r\n\r\n  const levels = Array.from({ length: 4 }, (_, index) => index + 1);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Welcome to BaseCode</Text>\r\n      <Text>Hello, {name}!</Text>\r\n      <ScrollView style={styles.scrollView}>\r\n        <View style={styles.row}>\r\n          {levels.map((level) => (\r\n            <View key={level} style={styles.buttonContainer}>\r\n              <CustomButton\r\n                title={`Level ${level}`}\r\n                color='#4287f5'\r\n                height={50}\r\n                width={100}\r\n                onPress={() => navigation.navigate('Level', { level : level })}\r\n              />\r\n            </View>\r\n          ))}\r\n        </View>\r\n        <CustomButton\r\n          title={`Login`}\r\n          color='#4287f5'\r\n          height={50}\r\n          width={100}\r\n          onPress={() => navigation.navigate('Login')}\r\n        />\r\n      </ScrollView>\r\n      {/* <LoginButton style={styles.loginButton} /> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAAQC,MAAM;AACd,OAAOC,YAAY;AACnB,SAASC,IAAI;AAAsB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnC,SAASC,UAAUA,CAAA,EAAG;EACpB,IAAMC,UAAU,GAAGT,aAAa,CAAC,CAAC;EAElC,IAAIU,IAAI;EACR,IAAIC,IAAI;EACRC,OAAO,CAACC,GAAG,CAACV,IAAI,CAACW,WAAW,CAAC;EAC7B,IAAGX,IAAI,CAACW,WAAW,IAAI,IAAI,EAAC;IAC1BJ,IAAI,GAAGP,IAAI,CAACW,WAAW;IACvBH,IAAI,GAAGD,IAAI,CAACC,IAAI,IAAID,IAAI,CAACK,KAAK;EAChC,CAAC,MAAM;IACLJ,IAAI,GAAG,EAAE;EACX;EAEA,IAAMK,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,UAACC,CAAC,EAAEC,KAAK;IAAA,OAAKA,KAAK,GAAG,CAAC;EAAA,EAAC;EAEjE,OACEd,KAAA,CAACV,IAAI;IAACyB,KAAK,EAAErB,MAAM,CAACsB,SAAU;IAAAC,QAAA,GAC5BnB,IAAA,CAACP,IAAI;MAACwB,KAAK,EAAErB,MAAM,CAACwB,MAAO;MAAAD,QAAA,EAAC;IAAmB,CAAM,CAAC,EACtDjB,KAAA,CAACT,IAAI;MAAA0B,QAAA,GAAC,SAAO,EAACb,IAAI,EAAC,GAAC;IAAA,CAAM,CAAC,EAC3BJ,KAAA,CAACR,UAAU;MAACuB,KAAK,EAAErB,MAAM,CAACyB,UAAW;MAAAF,QAAA,GACnCnB,IAAA,CAACR,IAAI;QAACyB,KAAK,EAAErB,MAAM,CAAC0B,GAAI;QAAAH,QAAA,EACrBR,MAAM,CAACY,GAAG,CAAC,UAACC,KAAK;UAAA,OAChBxB,IAAA,CAACR,IAAI;YAAayB,KAAK,EAAErB,MAAM,CAAC6B,eAAgB;YAAAN,QAAA,EAC9CnB,IAAA,CAACH,YAAY;cACX6B,KAAK,EAAG,SAAQF,KAAM,EAAE;cACxBG,KAAK,EAAC,SAAS;cACfC,MAAM,EAAE,EAAG;cACXC,KAAK,EAAE,GAAI;cACXC,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAM1B,UAAU,CAAC2B,QAAQ,CAAC,OAAO,EAAE;kBAAEP,KAAK,EAAGA;gBAAM,CAAC,CAAC;cAAA;YAAC,CAChE;UAAC,GAPOA,KAQL,CAAC;QAAA,CACR;MAAC,CACE,CAAC,EACPxB,IAAA,CAACH,YAAY;QACX6B,KAAK,EAAG,OAAO;QACfC,KAAK,EAAC,SAAS;QACfC,MAAM,EAAE,EAAG;QACXC,KAAK,EAAE,GAAI;QACXC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM1B,UAAU,CAAC2B,QAAQ,CAAC,OAAO,CAAC;QAAA;MAAC,CAC7C,CAAC;IAAA,CACQ,CAAC;EAAA,CAET,CAAC;AAEX;AAEA,eAAe5B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}