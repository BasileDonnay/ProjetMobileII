{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport CustomButton from \"./components/CustomButton\";\nimport { auth } from \"./firebase\";\nimport HomeScreen from \"./pages/HomeScreen\";\nimport LevelScreen from \"./pages/LevelScreen\";\nimport LoginScreen from \"./pages/LoginScreen\";\nimport RegisterScreen from \"./pages/RegisterScreen\";\nimport ProfileScreen from \"./pages/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isUserConnected = _useState2[0],\n    setIsUserConnected = _useState2[1];\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      setIsUserConnected(user !== null);\n    });\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            title: false,\n            headerTitle: false,\n            headerBackTitleVisible: false,\n            headerTransparent: true,\n            headerShadowVisible: false,\n            headerRight: function headerRight() {\n              var button = isUserConnected ? _jsx(CustomButton, {\n                title: `Profile`,\n                color: \"#8ceb34\",\n                height: 50,\n                width: 100,\n                onPress: function onPress() {\n                  return navigation.navigate('Profile');\n                }\n              }) : _jsx(CustomButton, {\n                title: `Login`,\n                color: \"#8ceb34\",\n                height: 50,\n                width: 100,\n                onPress: function onPress() {\n                  return navigation.navigate('Login');\n                }\n              });\n              return button;\n            }\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Level\",\n        component: LevelScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: function options(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            title: false,\n            headerTitle: false,\n            headerBackTitleVisible: false,\n            headerTransparent: true,\n            headerShadowVisible: false,\n            headerRight: function headerRight() {\n              return _jsx(CustomButton, {\n                title: `Logout`,\n                color: \"#f52727\",\n                height: 50,\n                width: 100,\n                onPress: function onPress() {\n                  return navigation.navigate('Home');\n                }\n              });\n            }\n          };\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","CustomButton","auth","HomeScreen","LevelScreen","LoginScreen","RegisterScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","isUserConnected","setIsUserConnected","onAuthStateChanged","user","children","Navigator","initialRouteName","Screen","name","component","options","_ref","navigation","title","headerTitle","headerBackTitleVisible","headerTransparent","headerShadowVisible","headerRight","button","color","height","width","onPress","navigate","_ref2"],"sources":["C:/Users/basil/ProjetMobileII/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport CustomButton from './components/CustomButton';\nimport { auth } from './firebase';\n\nimport HomeScreen from './pages/HomeScreen'; // Import HomeScreen component\nimport LevelScreen from './pages/LevelScreen'; // Import Level component\nimport LoginScreen from './pages/LoginScreen';\nimport RegisterScreen from './pages/RegisterScreen';\nimport ProfileScreen from './pages/ProfileScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [isUserConnected, setIsUserConnected] = useState(false);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      setIsUserConnected(user !== null);\n    });\n  }, []);\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={({ navigation }) => ({\n            title: false,\n            headerTitle: false,\n            headerBackTitleVisible: false,\n            headerTransparent: true,\n            headerShadowVisible: false,\n            headerRight: () => {\n              const button = isUserConnected ? (\n                <CustomButton\n                  title={`Profile`}\n                  color='#8ceb34'\n                  height={50}\n                  width={100}\n                  onPress={() => navigation.navigate('Profile')}\n                />\n              ) : (\n                <CustomButton\n                  title={`Login`}\n                  color='#8ceb34'\n                  height={50}\n                  width={100}\n                  onPress={() => navigation.navigate('Login')}\n                />\n              );\n\n              return button;\n            },\n          })}\n        />\n\n        <Stack.Screen name=\"Level\" component={LevelScreen} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          options={({ navigation }) => ({\n            title: false,\n            headerTitle: false,\n            headerBackTitleVisible: false,\n            headerTransparent: true,\n            headerShadowVisible: false,\n            headerRight: () => (\n              <CustomButton\n                title={`Logout`}\n                color='#f52727'\n                height={50}\n                width={100}\n                onPress={() => navigation.navigate('Home')}\n              />\n            ),\n          })}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}