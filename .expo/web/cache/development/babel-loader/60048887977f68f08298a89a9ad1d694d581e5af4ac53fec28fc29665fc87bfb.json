{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/core';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPassword = _useState2[0],\n    setShowPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    rememberMe = _useState12[0],\n    setRememberMe = _useState12[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var retrieveCredentials = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storedEmail = yield AsyncStorage.getItem('rememberedEmail');\n          var storedPassword = yield AsyncStorage.getItem('rememberedPassword');\n          if (storedEmail && storedPassword) {\n            setEmail(\"storedEmail\");\n            setPassword(\"storedPassword\");\n            setRememberMe(true);\n          }\n        } catch (error) {\n          console.error('Error retrieving credentials from AsyncStorage:', error);\n        }\n      });\n      return function retrieveCredentials() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    retrieveCredentials();\n  }, []);\n  var handleLogin = function handleLogin() {\n    setLoading(true);\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      setLoading(false);\n      if (rememberMe) {\n        AsyncStorage.setItem('rememberedEmail', email);\n        AsyncStorage.setItem('rememberedPassword', password);\n      } else {\n        AsyncStorage.removeItem('rememberedEmail');\n        AsyncStorage.removeItem('rememberedPassword');\n      }\n      navigation.navigate('Login', {\n        screen: 'Home'\n      });\n    }).catch(function (error) {\n      setError('E-mail address or password not correct');\n      setLoading(false);\n    });\n  };\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollViewContent,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"padding\",\n      keyboardVerticalOffset: Platform.OS === 'ios' ? 40 : 0,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Multi Game Mobile\"\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.inputLabel,\n          children: \"Email\"\n        }), _jsx(TextInput, {\n          placeholder: \"Type your email\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.input\n        }), _jsx(Text, {\n          style: styles.inputLabel,\n          children: \"Password\"\n        }), _jsxs(View, {\n          style: styles.passwordInputContainer,\n          children: [_jsx(TextInput, {\n            placeholder: \"Type your Password\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            style: [styles.input, styles.passwordInput],\n            secureTextEntry: !showPassword\n          }), _jsx(TouchableOpacity, {\n            style: styles.toggleIconContainer,\n            onPress: function onPress() {\n              return setShowPassword(!showPassword);\n            },\n            children: _jsx(Icon, {\n              name: showPassword ? 'eye-slash' : 'eye',\n              size: 20,\n              color: \"grey\"\n            })\n          })]\n        }), _jsxs(Text, {\n          style: [styles.inputLabel, {\n            marginLeft: 10\n          }],\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setRememberMe(!rememberMe);\n            },\n            children: _jsx(View, {\n              style: styles.checkboxContainer,\n              children: rememberMe && _jsx(View, {\n                style: styles.checkbox\n              })\n            })\n          }), ' ', \" Remember Me\"]\n        })]\n      }), error ? _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }) : null, _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          style: styles.button,\n          disabled: loading,\n          children: loading ? _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"white\"\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Register');\n          },\n          style: [styles.button, styles.buttonOutline],\n          children: _jsx(Text, {\n            style: styles.buttonOutlineText,\n            children: \"Create Account\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  passwordInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    position: 'relative'\n  },\n  passwordInput: {\n    flex: 1\n  },\n  toggleIconContainer: {\n    position: 'absolute',\n    right: 10\n  },\n  checkboxContainer: {\n    width: 17,\n    height: 17,\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 3,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  checkbox: {\n    width: 8,\n    height: 8,\n    backgroundColor: 'white',\n    borderRadius: 2\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: '#fff',\n    textShadowColor: '#000',\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 5,\n    marginTop: 70\n  },\n  inputContainer: {\n    width: 300,\n    alignItems: 'flex-start'\n  },\n  inputLabel: {\n    marginLeft: 5,\n    paddingTop: 10,\n    color: 'white',\n    fontSize: 17,\n    marginBottom: 5\n  },\n  input: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 15,\n    marginTop: 5,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    width: '100%'\n  },\n  buttonContainer: {\n    width: 220,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#248ad9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 20,\n    alignItems: 'center',\n    marginTop: 20\n  },\n  buttonOutline: {\n    backgroundColor: '#fff',\n    borderColor: '#248ad9',\n    borderWidth: 2,\n    borderRadius: 20,\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#248ad9',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  errorText: {\n    color: 'red',\n    marginTop: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useEffect","useState","ActivityIndicator","ImageBackground","KeyboardAvoidingView","Platform","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","useNavigation","auth","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","error","setError","_useState9","_useState10","loading","setLoading","_useState11","_useState12","rememberMe","setRememberMe","navigation","retrieveCredentials","_ref","_asyncToGenerator","storedEmail","AsyncStorage","getItem","storedPassword","console","apply","arguments","handleLogin","signInWithEmailAndPassword","then","userCredentials","user","setItem","removeItem","navigate","screen","catch","contentContainerStyle","styles","scrollViewContent","children","style","container","behavior","keyboardVerticalOffset","OS","title","inputContainer","inputLabel","placeholder","value","onChangeText","text","input","passwordInputContainer","passwordInput","secureTextEntry","toggleIconContainer","onPress","Icon","name","size","color","marginLeft","checkboxContainer","checkbox","errorText","buttonContainer","button","disabled","buttonText","buttonOutline","buttonOutlineText","create","flexDirection","alignItems","position","flex","right","width","height","borderWidth","borderColor","borderRadius","justifyContent","backgroundColor","backgroundImage","resizeMode","flexGrow","fontSize","fontWeight","marginBottom","textShadowColor","textShadowOffset","textShadowRadius","marginTop","paddingTop","paddingHorizontal","paddingVertical","padding"],"sources":["C:/Users/basil/ProjetMobileII/pages/LoginScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ActivityIndicator,\r\n    ImageBackground,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    View,\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/core';\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { auth } from '../firebase';\r\n//import cielBackground from '../assets/blueBack.jpg';\r\n//import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nconst LoginScreen = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    useEffect(() => {\r\n        // Check AsyncStorage for stored credentials and set them in state\r\n        const retrieveCredentials = async () => {\r\n            try {\r\n                const storedEmail = await AsyncStorage.getItem('rememberedEmail');\r\n                const storedPassword = await AsyncStorage.getItem('rememberedPassword');\r\n\r\n                if (storedEmail && storedPassword) {\r\n                    //setEmail(storedEmail);\r\n                    setEmail(\"storedEmail\");\r\n                    //setPassword(storedPassword);\r\n                    setPassword(\"storedPassword\");\r\n                    setRememberMe(true);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error retrieving credentials from AsyncStorage:', error);\r\n            }\r\n        };\r\n\r\n        retrieveCredentials();\r\n    }, []);\r\n\r\n    const handleLogin = () => {\r\n        setLoading(true);\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user;\r\n                setLoading(false);\r\n\r\n                // Store credentials if \"Remember Me\" is checked\r\n                if (rememberMe) {\r\n                    AsyncStorage.setItem('rememberedEmail', email);\r\n                    AsyncStorage.setItem('rememberedPassword', password);\r\n                } else {\r\n                    // Clear credentials if \"Remember Me\" is unchecked\r\n                    AsyncStorage.removeItem('rememberedEmail');\r\n                    AsyncStorage.removeItem('rememberedPassword');\r\n                }\r\n\r\n                navigation.navigate('Login', {screen: 'Home'});\r\n            })\r\n            .catch(error => {\r\n                setError('E-mail address or password not correct');\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        // <ImageBackground source={cielBackground} style={styles.backgroundImage}>\r\n            <ScrollView contentContainerStyle={styles.scrollViewContent}>\r\n                <KeyboardAvoidingView\r\n                    style={styles.container}\r\n                    behavior=\"padding\"\r\n                    keyboardVerticalOffset={Platform.OS === 'ios' ? 40 : 0}\r\n                >\r\n                    <Text style={styles.title}>Multi Game Mobile</Text>\r\n\r\n                    <View style={styles.inputContainer}>\r\n                        <Text style={styles.inputLabel}>Email</Text>\r\n                        <TextInput\r\n                            placeholder=\"Type your email\"\r\n                            value={email}\r\n                            onChangeText={(text) => setEmail(text)}\r\n                            style={styles.input}\r\n                        />\r\n\r\n                        <Text style={styles.inputLabel}>Password</Text>\r\n                        <View style={styles.passwordInputContainer}>\r\n                            <TextInput\r\n                                placeholder=\"Type your Password\"\r\n                                value={password}\r\n                                onChangeText={(text) => setPassword(text)}\r\n                                style={[styles.input, styles.passwordInput]}\r\n                                secureTextEntry={!showPassword}\r\n                            />\r\n                            <TouchableOpacity\r\n                                style={styles.toggleIconContainer}\r\n                                onPress={() => setShowPassword(!showPassword)}\r\n                            >\r\n                                <Icon name={showPassword ? 'eye-slash' : 'eye'} size={20} color=\"grey\" />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <Text style={[styles.inputLabel, { marginLeft: 10 }]}>\r\n                            <TouchableOpacity onPress={() => setRememberMe(!rememberMe)}>\r\n                                <View style={styles.checkboxContainer}>\r\n                                    {rememberMe && <View style={styles.checkbox} />}\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            {' '} Remember Me\r\n                        </Text>\r\n                    </View>\r\n\r\n                    {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n\r\n                    <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity onPress={handleLogin} style={styles.button} disabled={loading}>\r\n                            {loading ? (\r\n                                <ActivityIndicator size=\"small\" color=\"white\" />\r\n                            ) : (\r\n                                <Text style={styles.buttonText}>Login</Text>\r\n                            )}\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            onPress={() => navigation.navigate('Register')}\r\n                            style={[styles.button, styles.buttonOutline]}\r\n                        >\r\n                            <Text style={styles.buttonOutlineText}>Create Account</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        // </ImageBackground>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    passwordInputContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        position: 'relative', // Added for proper positioning of the eye icon\r\n    },\r\n    passwordInput: {\r\n        flex: 1,\r\n    },\r\n    toggleIconContainer: {\r\n        position: 'absolute',\r\n        right: 10, // Adjust the value based on your preference\r\n    },\r\n    checkboxContainer: {\r\n        width: 17,\r\n        height: 17,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        borderRadius: 3,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    checkbox: {\r\n        width: 8,\r\n        height: 8,\r\n        backgroundColor: 'white',\r\n        borderRadius: 2,\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n        justifyContent: 'center',\r\n    },\r\n    scrollViewContent: {\r\n        flexGrow: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 36, // Augmentez la taille du texte\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        color: '#fff', // Couleur du texte\r\n        textShadowColor: '#000',\r\n        textShadowOffset: { width: 2, height: 2 },\r\n        textShadowRadius: 5,\r\n        marginTop:70,\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n        alignItems: 'flex-start', // Alignez les éléments à gauche\r\n    },\r\n    inputLabel: {\r\n        marginLeft: 5, // Ajoutez une marge à gauche pour déplacer le inputContainer vers la droite\r\n        paddingTop: 10,\r\n        color: 'white',\r\n        fontSize: 17,\r\n        marginBottom: 5,\r\n    },\r\n    input: {\r\n        backgroundColor: '#fff',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 15,\r\n        marginTop: 5,\r\n        borderWidth: 1,\r\n        borderColor: '#ccc',\r\n        width: '100%',\r\n\r\n\r\n    },\r\n    buttonContainer: {\r\n        width: 220,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40,\r\n    },\r\n    button: {\r\n        backgroundColor: '#248ad9',\r\n        width: '100%',\r\n        padding: 15,\r\n        borderRadius: 20,\r\n        alignItems: 'center',\r\n        marginTop: 20,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: '#fff',\r\n        borderColor: '#248ad9',\r\n        borderWidth: 2,\r\n        borderRadius: 20,\r\n        marginTop: 10,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n    buttonOutlineText: {\r\n        color: '#248ad9',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n    errorText: {\r\n        color: 'red',\r\n        marginTop: 10,\r\n    },\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}