{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nrequire('codemirror/mode/javascript/javascript');\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Level\",\n        component: LevelScreen\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var levels = Array.from({\n    length: 50\n  }, function (_, index) {\n    return index + 1;\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Welcome to My Game\"\n    }), _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: _jsx(View, {\n        style: styles.row,\n        children: levels.map(function (level) {\n          return _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(CustomButton, {\n              title: `Level ${level}`,\n              onPress: function onPress() {\n                return navigation.navigate('Level', {\n                  level: level\n                });\n              }\n            })\n          }, level);\n        })\n      })\n    })]\n  });\n}\nfunction LevelScreen(_ref2) {\n  var route = _ref2.route,\n    navigation = _ref2.navigation;\n  var level = route.params.level;\n  var goBackToHome = function goBackToHome() {\n    navigation.goBack();\n  };\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  scrollView: {\n    flex: 1,\n    width: '100%'\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    marginHorizontal: 10,\n    marginVertical: 10\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","ScrollView","NavigationContainer","createStackNavigator","Controlled","CodeMirror","jsx","_jsx","jsxs","_jsxs","require","Stack","App","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","options","headerShown","LevelScreen","_ref","navigation","levels","Array","from","length","_","index","style","styles","container","header","scrollView","row","map","level","buttonContainer","CustomButton","title","onPress","navigate","_ref2","route","params","goBackToHome","goBack","create","flex","backgroundColor","alignItems","justifyContent","fontSize","marginBottom","width","flexDirection","flexWrap","marginHorizontal","marginVertical"],"sources":["C:/Users/basil/ProjetMobileII/App.js"],"sourcesContent":["/*import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native'; // Import TouchableOpacity\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { CodeEditor, CodeEditorLanguage } from 'react-native-code-editor'; // Import CodeEditor components\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Level\" component={LevelScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  const levels = Array.from({ length: 50 }, (_, index) => index + 1);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Welcome to My Game</Text>\n      <ScrollView style={styles.scrollView}>\n        <View style={styles.row}>\n          {levels.map((level) => (\n            <View key={level} style={styles.buttonContainer}>\n              <CustomButton\n                title={`Level ${level}`}\n                onPress={() => navigation.navigate('Level', { level })}\n              />\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\n// Create a custom button component\nfunction CustomButton({ title, onPress }) {\n  return (\n    <TouchableOpacity style={styles.button} onPress={onPress}>\n      <Text style={styles.buttonText}>{title}</Text>\n    </TouchableOpacity>\n  );\n}\n\nfunction LevelScreen({ route, navigation }) {\n  const { level } = route.params;\n\n  const goBackToHome = () => {\n    navigation.goBack();\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Level {level}</Text>\n      <CustomButton title=\"Go Back\" onPress={goBackToHome} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  scrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  buttonContainer: {\n    marginHorizontal: 10,\n    marginVertical: 10,\n  },\n  button: {\n    width: 200,\n    height: 200,\n    backgroundColor: '#03a5fc', // Example background color\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    color: 'white', // Example text color\n    fontSize: 16,\n  },\n});*/\n\nimport React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet, ScrollView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Controlled as CodeMirror } from 'react-codemirror2'; // Import CodeMirror\n\nrequire('codemirror/mode/javascript/javascript'); // Import JavaScript mode for CodeMirror\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Level\" component={LevelScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  const levels = Array.from({ length: 50 }, (_, index) => index + 1);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Welcome to My Game</Text>\n      <ScrollView style={styles.scrollView}>\n        <View style={styles.row}>\n          {levels.map((level) => (\n            <View key={level} style={styles.buttonContainer}>\n              <CustomButton\n                title={`Level ${level}`}\n                onPress={() => navigation.navigate('Level', { level })}\n              />\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction LevelScreen({ route, navigation }) {\n  const { level } = route.params;\n  const goBackToHome = () => {\n    navigation.goBack();\n  };\n\n  // Example code content\n  /*const [code, setCode] = useState(`function myFunction() {\n  console.log('Hello, World!');\n}`);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Level {level}</Text>\n      //Code Editor\n      <CodeMirror\n        value={code}\n        options={{\n          mode: 'javascript',\n          theme: 'default',\n          lineNumbers: true,\n        }}\n        onBeforeChange={(editor, data, value) => setCode(value)}\n        className=\"code-mirror\"\n      />\n      <CustomButton title=\"Go Back\" onPress={goBackToHome} />\n    </View>\n  );*/\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  scrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  buttonContainer: {\n    marginHorizontal: 10,\n    marginVertical: 10,\n  },\n  /*codeEditor: {\n    width: '100%', // Set the code editor width\n    height: 200,   // Set the code editor height\n  },*/\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}