{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useRoute } from '@react-navigation/native';\nimport reactJsxParser from 'html-react-parser';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { styles } from \"../styles/Styles\";\nimport CustomButton from \"../components/CustomButton\";\nimport levelInstructions from \"../data/levels.json\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction LevelScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    level = _useState2[0],\n    setLevel = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    instruction = _useState4[0],\n    setInstruction = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    javaCode = _useState6[0],\n    setJavaCode = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    output = _useState8[0],\n    setOutput = _useState8[1];\n  var reactOutput = new reactJsxParser(output);\n  var route = useRoute();\n  useEffect(function () {\n    var _route$params;\n    if (route != null && (_route$params = route.params) != null && _route$params.level) {\n      var _route$params2;\n      var currentLevel = route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.level;\n      setLevel(currentLevel);\n      var currentInstruction = levelInstructions[currentLevel];\n      setInstruction(currentInstruction);\n    }\n  }, [route]);\n  var goBackToHome = function goBackToHome() {\n    navigation.goBack();\n  };\n  var executeJavaCode = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield fetch(\"http://localhost:3000/execute\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: javaCode\n        })\n      });\n      var result = yield response.text();\n      setOutput(result);\n    });\n    return function executeJavaCode() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.header,\n      children: [\"Level \", level]\n    }), _jsx(Text, {\n      style: styles.instruction,\n      children: instruction\n    }), _jsx(TextInput, {\n      multiline: true,\n      style: styles.codeEditor,\n      value: javaCode,\n      onChangeText: function onChangeText(text) {\n        return setJavaCode(text);\n      }\n    }), _jsx(SyntaxHighlighter, {\n      language: \"java\",\n      children: javaCode\n    }), _jsx(CustomButton, {\n      title: \"Execute Java Code\",\n      onPress: executeJavaCode\n    }), _jsx(CustomButton, {\n      title: \"Go Back\",\n      onPress: goBackToHome\n    }), _jsx(Text, {\n      style: {\n        marginTop: 10\n      },\n      children: \"Output:\"\n    }), _jsx(Text, {\n      children: reactOutput\n    })]\n  });\n}\nexport default LevelScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TextInput","useRoute","reactJsxParser","SyntaxHighlighter","styles","CustomButton","levelInstructions","jsxs","_jsxs","jsx","_jsx","LevelScreen","_ref","navigation","_useState","_useState2","_slicedToArray","level","setLevel","_useState3","_useState4","instruction","setInstruction","_useState5","_useState6","javaCode","setJavaCode","_useState7","_useState8","output","setOutput","reactOutput","route","_route$params","params","_route$params2","currentLevel","currentInstruction","goBackToHome","goBack","executeJavaCode","_ref2","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","code","result","text","apply","arguments","style","container","children","header","multiline","codeEditor","value","onChangeText","language","title","onPress","marginTop"],"sources":["C:/Users/basil/ProjetMobileII/pages/LevelScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TextInput } from 'react-native';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport reactJsxParser from 'html-react-parser';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\n\r\nimport { styles } from '../styles/Styles'; // Import the styles\r\nimport CustomButton from '../components/CustomButton';\r\nimport levelInstructions from '../data/levels.json'; // Import the JSON file\r\n\r\nfunction LevelScreen({ navigation }) {\r\n  const [level, setLevel] = useState('');\r\n  const [instruction, setInstruction] = useState('');\r\n  const [javaCode, setJavaCode] = useState(''); // State variable to store the Java code\r\n  const [output, setOutput] = useState(''); // State variable to store the output of the Java code\r\n\r\n  const reactOutput = new reactJsxParser(output);\r\n\r\n  const route = useRoute();\r\n\r\n  useEffect(() => {\r\n    if (route?.params?.level) {\r\n      const currentLevel = route?.params?.level;\r\n      setLevel(currentLevel);\r\n\r\n      const currentInstruction = levelInstructions[currentLevel]; // Retrieve instruction for the current level from the JSON file\r\n      setInstruction(currentInstruction);\r\n    }\r\n  }, [route]);\r\n\r\n  const goBackToHome = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const executeJavaCode = async () => {\r\n    // Send the Java code to the server\r\n    const response = await fetch(\"http://localhost:3000/execute\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ code: javaCode }),\r\n    });\r\n\r\n    // Get the output from the server\r\n    const result = await response.text();\r\n\r\n    // Set the output state\r\n    setOutput(result);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Level {level}</Text>\r\n      <Text style={styles.instruction}>{instruction}</Text>\r\n      <TextInput\r\n        multiline\r\n        style={styles.codeEditor}\r\n        value={javaCode}\r\n        onChangeText={(text) => setJavaCode(text)}\r\n      />\r\n      <SyntaxHighlighter language=\"java\">\r\n        {javaCode}\r\n      </SyntaxHighlighter>\r\n      <CustomButton title=\"Execute Java Code\" onPress={executeJavaCode} />\r\n      <CustomButton title=\"Go Back\" onPress={goBackToHome} />\r\n      <Text style={{ marginTop: 10 }}>Output:</Text>\r\n      <Text>{reactOutput}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default LevelScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}