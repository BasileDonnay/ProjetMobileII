{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Level\",\n        component: LevelScreen\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var levels = Array.from({\n    length: 50\n  }, function (_, index) {\n    return index + 1;\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Welcome to My Game\"\n    }), _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: levels.map(function (level) {\n        return _jsx(LevelButton, {\n          level: level,\n          navigation: navigation\n        }, level);\n      })\n    })]\n  });\n}\nfunction LevelButton(_ref2) {\n  var level = _ref2.level,\n    navigation = _ref2.navigation;\n  var goToLevel = function goToLevel() {\n    navigation.navigate('Level', {\n      level: level\n    });\n  };\n  return _jsx(View, {\n    style: styles.buttonContainer,\n    children: _jsx(Button, {\n      title: `Level ${level}`,\n      onPress: goToLevel\n    })\n  });\n}\nfunction LevelScreen(_ref3) {\n  var route = _ref3.route,\n    navigation = _ref3.navigation;\n  var level = route.params.level;\n  var goBackToHome = function goBackToHome() {\n    navigation.goBack();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.header,\n      children: [\"Level \", level]\n    }), _jsx(Button, {\n      title: \"Go Back\",\n      onPress: goBackToHome\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  scrollView: {\n    flex: 1,\n    width: '100%'\n  },\n  buttonContainer: {\n    margin: 10\n  }\n});","map":{"version":3,"names":["React","View","Text","Button","StyleSheet","ScrollView","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","options","headerShown","LevelScreen","_ref","navigation","levels","Array","from","length","_","index","style","styles","container","header","scrollView","map","level","LevelButton","_ref2","goToLevel","navigate","buttonContainer","title","onPress","_ref3","route","params","goBackToHome","goBack","create","flex","backgroundColor","alignItems","justifyContent","fontSize","marginBottom","width","margin"],"sources":["C:/Users/basil/ProjetMobileII/App.js"],"sourcesContent":["/*import React from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Level\" component={LevelScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  const levels = Array.from({ length: 50 }, (_, index) => index + 1);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Welcome to My Game</Text>\n      {levels.map((level) => (\n        <LevelButton key={level} level={level} navigation={navigation} />\n      ))}\n    </View>\n  );\n}\n\nfunction LevelButton({ level, navigation }) {\n  const goToLevel = () => {\n    navigation.navigate('Level', { level });\n  };\n\n  return (\n    <View style={styles.buttonContainer}>\n      <Button title={`Level ${level}`} onPress={goToLevel} />\n    </View>\n  );\n}\n\nfunction LevelScreen({ route, navigation }) {\n  const { level } = route.params;\n\n  const goBackToHome = () => {\n    navigation.goBack();\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Level {level}</Text>\n      <Button title=\"Go Back\" onPress={goBackToHome} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  buttonContainer: {\n    marginVertical: 10,\n  },\n});*/\n\nimport React from 'react';\nimport { View, Text, Button, StyleSheet, ScrollView } from 'react-native'; // Import ScrollView\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Level\" component={LevelScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  const levels = Array.from({ length: 50 }, (_, index) => index + 1);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Welcome to My Game</Text>\n      {/* Wrap the level buttons in a ScrollView */}\n      <ScrollView style={styles.scrollView}>\n        {levels.map((level) => (\n          <LevelButton key={level} level={level} navigation={navigation} />\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction LevelButton({ level, navigation }) {\n  const goToLevel = () => {\n    navigation.navigate('Level', { level });\n  };\n\n  return (\n    <View style={styles.buttonContainer}>\n      <Button title={`Level ${level}`} onPress={goToLevel} />\n    </View>\n  );\n}\n\nfunction LevelScreen({ route, navigation }) {\n  const { level } = route.params;\n\n  const goBackToHome = () => {\n    navigation.goBack();\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Level {level}</Text>\n      <Button title=\"Go Back\" onPress={goBackToHome} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  scrollView: {\n    flex: 1, // Ensure the ScrollView takes up all available space\n    width: '100%', // Full width\n  },\n  buttonContainer: {\n    margin: 10,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}