{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useRoute } from '@react-navigation/native';\nimport reactJsxParser from 'html-react-parser';\nimport CodeEditor, { CodeEditorSyntaxStyles } from '@rivascva/react-native-code-editor';\nimport 'react-native';\nimport { styles } from \"../styles/Styles\";\nimport CustomButton from \"../components/CustomButton\";\nimport levelInstructions from \"../data/levels.json\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction LevelScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    level = _useState2[0],\n    setLevel = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    instruction = _useState4[0],\n    setInstruction = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    javaCode = _useState6[0],\n    setJavaCode = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    output = _useState8[0],\n    setOutput = _useState8[1];\n  var reactOutput = new reactJsxParser(output);\n  var route = useRoute();\n  var screenWidth = Dimensions.get('window').width;\n  var lineHeight = 23;\n  useEffect(function () {\n    var _route$params;\n    if (route != null && (_route$params = route.params) != null && _route$params.level) {\n      var _route$params2;\n      var currentLevel = route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.level;\n      setLevel(currentLevel);\n      var currentInstruction = levelInstructions[currentLevel];\n      setInstruction(currentInstruction);\n    }\n  }, [route]);\n  var handleChange = function handleChange(code) {\n    setJavaCode(code);\n  };\n  var goBackToHome = function goBackToHome() {\n    navigation.goBack();\n  };\n  var getSyntaxStyle = function getSyntaxStyle() {\n    if (Platform.OS === 'android') {\n      return CodeEditorSyntaxStyles.atomOneDark;\n    } else {\n      return CodeEditorSyntaxStyles.tomorrow;\n    }\n  };\n  var executeJavaCode = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield fetch('http://localhost:3000/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: javaCode\n        })\n      });\n      var result = yield response.text();\n      setOutput(result);\n    });\n    return function executeJavaCode() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.header,\n      children: [\"Level \", level]\n    }), _jsx(Text, {\n      style: styles.instruction,\n      children: instruction\n    }), _jsx(View, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      children: _jsx(CodeEditor, {\n        style: {\n          width: screenWidth,\n          height: 300,\n          fontSize: 20,\n          inputLineHeight: lineHeight,\n          inputColor: Platform.OS !== 'android' ? '#abb2bf' : undefined,\n          backgroundColor: '#282c34'\n        },\n        language: \"java\",\n        syntaxStyle: getSyntaxStyle(),\n        showLineNumbers: true,\n        autoFocus: true,\n        initialValue: \"res = 1;\",\n        onChange: handleChange\n      })\n    }), _jsx(CustomButton, {\n      title: \"Execute Java Code\",\n      onPress: executeJavaCode\n    }), _jsx(CustomButton, {\n      title: \"Go Back\",\n      onPress: goBackToHome\n    }), _jsx(Text, {\n      style: {\n        marginTop: 10\n      },\n      children: \"Output:\"\n    }), _jsx(Text, {\n      children: reactOutput\n    })]\n  });\n}\nexport default LevelScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Dimensions","Platform","useRoute","reactJsxParser","CodeEditor","CodeEditorSyntaxStyles","styles","CustomButton","levelInstructions","jsxs","_jsxs","jsx","_jsx","LevelScreen","_ref","navigation","_useState","_useState2","_slicedToArray","level","setLevel","_useState3","_useState4","instruction","setInstruction","_useState5","_useState6","javaCode","setJavaCode","_useState7","_useState8","output","setOutput","reactOutput","route","screenWidth","get","width","lineHeight","_route$params","params","_route$params2","currentLevel","currentInstruction","handleChange","code","goBackToHome","goBack","getSyntaxStyle","OS","atomOneDark","tomorrow","executeJavaCode","_ref2","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","result","text","apply","arguments","style","container","children","header","backgroundColor","height","fontSize","inputLineHeight","inputColor","undefined","language","syntaxStyle","showLineNumbers","autoFocus","initialValue","onChange","title","onPress","marginTop"],"sources":["C:/Users/basil/ProjetMobileII/pages/LevelScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Dimensions, Platform } from 'react-native';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport reactJsxParser from 'html-react-parser';\r\nimport CodeEditor, { CodeEditorSyntaxStyles } from '@rivascva/react-native-code-editor';\r\nimport { } from 'react-native';\r\n\r\nimport { styles } from '../styles/Styles'; // Import the styles\r\nimport CustomButton from '../components/CustomButton';\r\nimport levelInstructions from '../data/levels.json'; // Import the JSON file\r\n\r\nfunction LevelScreen({ navigation }) {\r\n  const [level, setLevel] = useState('');\r\n  const [instruction, setInstruction] = useState('');\r\n  const [javaCode, setJavaCode] = useState(''); // State variable to store the Java code\r\n  const [output, setOutput] = useState(''); // State variable to store the output of the Java code\r\n\r\n  const reactOutput = new reactJsxParser(output);\r\n\r\n  const route = useRoute();\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const lineHeight = 23;\r\n\r\n  useEffect(() => {\r\n    if (route?.params?.level) {\r\n      const currentLevel = route?.params?.level;\r\n      setLevel(currentLevel);\r\n\r\n      const currentInstruction = levelInstructions[currentLevel]; // Retrieve instruction for the current level from the JSON file\r\n      setInstruction(currentInstruction);\r\n    }\r\n  }, [route]);\r\n\r\n  const handleChange = (code) => {\r\n    setJavaCode(code);\r\n  };\r\n\r\n  const goBackToHome = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const getSyntaxStyle = () => {\r\n    if (Platform.OS === 'android') {\r\n      return CodeEditorSyntaxStyles.atomOneDark;\r\n    } else {\r\n      return CodeEditorSyntaxStyles.tomorrow;\r\n    }\r\n  };\r\n\r\n  const executeJavaCode = async () => {\r\n    // Send the Java code to the server\r\n    const response = await fetch('http://localhost:3000/execute', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ code: javaCode }),\r\n    });\r\n\r\n    // Get the output from the server\r\n    const result = await response.text();\r\n\r\n    // Set the output state\r\n    setOutput(result);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Level {level}</Text>\r\n      <Text style={styles.instruction}>{instruction}</Text>\r\n      <View style={{ backgroundColor: '#282c34' }}>\r\n        <CodeEditor\r\n          style={{\r\n            width: screenWidth,\r\n            height: 300,\r\n            fontSize: 20,\r\n            inputLineHeight: lineHeight,\r\n            inputColor: Platform.OS !== 'android' ? '#abb2bf' : undefined, // Only activate this code when on web and not on Android\r\n            backgroundColor: '#282c34',\r\n          }}\r\n          language='java'\r\n          syntaxStyle= {getSyntaxStyle()}\r\n          showLineNumbers\r\n          autoFocus\r\n          initialValue='res = 1;'\r\n          onChange={handleChange}\r\n        />\r\n      </View>\r\n      <CustomButton title='Execute Java Code' onPress={executeJavaCode} />\r\n      <CustomButton title='Go Back' onPress={goBackToHome} />\r\n      <Text style={{ marginTop: 10 }}>Output:</Text>\r\n      <Text>{reactOutput}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default LevelScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}