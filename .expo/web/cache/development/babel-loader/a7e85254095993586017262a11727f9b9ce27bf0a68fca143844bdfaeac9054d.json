{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../styles/Styles\";\nimport { useNavigation } from '@react-navigation/core';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPassword = _useState2[0],\n    setShowPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var navigation = useNavigation();\n  var handleLogin = function handleLogin() {\n    setLoading(true);\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      setLoading(false);\n      navigation.navigate(`Home`);\n    }).catch(function (error) {\n      setError('E-mail address or password not correct');\n      setLoading(false);\n    });\n  };\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollViewContent,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"padding\",\n      keyboardVerticalOffset: Platform.OS === 'ios' ? 40 : 0,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.inputLabel,\n          children: \"Email\"\n        }), _jsx(TextInput, {\n          placeholder: \"Type your email\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.input\n        }), _jsx(Text, {\n          style: styles.inputLabel,\n          children: \"Password\"\n        }), _jsx(View, {\n          style: styles.passwordInputContainer,\n          children: _jsx(TextInput, {\n            placeholder: \"Type your Password\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            style: [styles.input, styles.passwordInput],\n            secureTextEntry: !showPassword\n          })\n        })]\n      }), error ? _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }) : null, _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          style: styles.button,\n          disabled: loading,\n          children: loading ? _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"white\"\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Register');\n          },\n          style: [styles.button, styles.buttonOutline],\n          children: _jsx(Text, {\n            style: styles.buttonOutlineText,\n            children: \"Create Account\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","ActivityIndicator","KeyboardAvoidingView","Platform","ScrollView","Text","TextInput","TouchableOpacity","View","styles","useNavigation","auth","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","error","setError","_useState9","_useState10","loading","setLoading","navigation","handleLogin","signInWithEmailAndPassword","then","userCredentials","user","navigate","catch","contentContainerStyle","scrollViewContent","children","style","container","behavior","keyboardVerticalOffset","OS","inputContainer","inputLabel","placeholder","value","onChangeText","text","input","passwordInputContainer","passwordInput","secureTextEntry","errorText","buttonContainer","onPress","button","disabled","size","color","buttonText","buttonOutline","buttonOutlineText"],"sources":["C:/Users/basil/ProjetMobileII/pages/LoginScreen.js"],"sourcesContent":["import React, {useState } from 'react';\r\nimport {\r\n  ActivityIndicator,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport { styles } from '../styles/Styles'; // Import the styles\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nconst LoginScreen = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const handleLogin = () => {\r\n    setLoading(true);\r\n    auth.signInWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        setLoading(false);\r\n        \r\n        navigation.navigate(`Home`)\r\n      })\r\n      .catch(error => {\r\n        setError('E-mail address or password not correct');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollViewContent}>\r\n      <KeyboardAvoidingView\r\n        style={styles.container}\r\n        behavior=\"padding\"\r\n        keyboardVerticalOffset={Platform.OS === 'ios' ? 40 : 0}\r\n      >\r\n        <View style={styles.inputContainer}>\r\n          <Text style={styles.inputLabel}>Email</Text>\r\n          <TextInput\r\n            placeholder=\"Type your email\"\r\n            value={email}\r\n            onChangeText={(text) => setEmail(text)}\r\n            style={styles.input}\r\n          />\r\n\r\n          <Text style={styles.inputLabel}>Password</Text>\r\n          <View style={styles.passwordInputContainer}>\r\n            <TextInput\r\n              placeholder=\"Type your Password\"\r\n              value={password}\r\n              onChangeText={(text) => setPassword(text)}\r\n              style={[styles.input, styles.passwordInput]}\r\n              secureTextEntry={!showPassword}\r\n            />\r\n            </View>\r\n        </View>\r\n\r\n        {error ? <Text style={styles.errorText}>{error}</Text> : null}\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity onPress={handleLogin} style={styles.button} disabled={loading}>\r\n            {loading ? (\r\n              <ActivityIndicator size=\"small\" color=\"white\" />\r\n            ) : (\r\n              <Text style={styles.buttonText}>Login</Text>\r\n            )}\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate('Register')}\r\n            style={[styles.button, styles.buttonOutline]}\r\n          >\r\n            <Text style={styles.buttonOutlineText}>Create Account</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}